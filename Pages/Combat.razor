@page "/combat"
@using lesEchoDuNeant.Models


<h1>Combat !</h1>

<h2>@Monstre.Nom</h2>
<p>Point de vie: @Monstre.PointsDeVie</p>

<br>

<h2>@Personnages.Nom</h2>
<p>Point de vie: @Personnages.PointsDeVie</p>

@if (FinDuCombat)
{
    <p>@Message</p>
}

<div>
    <button @onclick="() => Attaquer()">Attaquer</button>
    <button @onclick="() => Defendre()">Defendre</button>
    @* <button @onclick="() => Message = Personnages.Esquiver()"></button> *@
</div>


@code
{
    [Inject]
    private NavigationManager NavigationManager{get;set;}
    private lesEchoDuNeant.Models.Personnages Personnages;
    private lesEchoDuNeant.Models.Monstres Monstre;
    private string Message;
    private bool FinDuCombat = false;

    protected override void OnInitialized()
    {
        Personnages = new Guerrier();
        @* Monstre = MonstreFactory.CreerMonstreAleatoire(); *@
    }

    private async Task Attaquer()
    {
        if (FinDuCombat) return;
        Message = Personnages.Attaquer(Monstre);
        StateHasChanged();

        if (Monstre.PointsDeVie == 0)
        {
            FinDuCombat = true;
            Message = $"{Monstre.Nom} à été vaincu";
            StateHasChanged();
            await RetourMap();
        }
        else if (Personnages.PointsDeVie <= 0)
        {
            FinDuCombat = true;
            Message = $"{Personnages.Nom} est tombé au combat ! Game Over..";
            StateHasChanged();
            await RetourMap();
        }
    }

    private async Task Defendre()
    {
        if (FinDuCombat) return;
        Personnages.Defendre();

        await Task.Delay(1000);
    }

    private async Task RetourMap()
    {
        await Task.Delay(5000);
        NavigationManager.NavigateTo("/nouvelle-partie");
    }
}