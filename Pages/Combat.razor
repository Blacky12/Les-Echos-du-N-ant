@page "/combat"
@using lesEchoDuNeant.Models
@using lesEchoDuNeant.Combat

@inject NavigationManager Navigation

<h1>Combat</h1>

@if (CombatManager != null)
{
    <div class="combat-container">
        <div class="combat-stats">
            <h2>Votre Personnage</h2>
            <p>@CombatManager.Joueur.Nom</p>
            <p>PV : @CombatManager.Joueur.PointsDeVie</p>
            <p>Force : @CombatManager.Joueur.Force</p>
            <p>Agilité : @CombatManager.Joueur.Agilite</p>
        </div>

        <div class="combat-stats">
            <h2>Monstre</h2>
            <p>@CombatManager.Monstre.Nom</p>
            <p>PV : @CombatManager.Monstre.PointsDeVie</p>
            <p>Force : @CombatManager.Monstre.Force</p>
            <p>Agilité : @CombatManager.Monstre.Agilite</p>
        </div>
    </div>

    <div class="combat-actions">
        @if (!CombatManager.CombatTerminer)
        {
            <button @onclick="Attaquer">Attaquer</button>
            <button @onclick="Fuir">Fuir</button>
        }
        else
        {
            <h2>@CombatManager.Resultat</h2>
            <button @onclick="RetournerAuMenu">Retourner au menu</button>
        }
    </div>

    <div class="combat-log">
        <h3>Journal de Combat</h3>
        @foreach (var log in CombatLogs)
        {
            <p>@log</p>
        }
    </div>
}
else
{
    <p>Chargement...</p>
}

@code {
    [Parameter] public string JoueurNom { get; set; }
    [Parameter] public string MonstreNom { get; set; }

    private CombatManager CombatManager;
    private List<string> CombatLogs = new List<string>();

    protected override void OnInitialized()
    {
        Console.WriteLine($"Paramètres reçus : Joueur = {JoueurNom}, Monstre = {MonstreNom}");

        if (string.IsNullOrEmpty(JoueurNom) || string.IsNullOrEmpty(MonstreNom))
        {
            Console.WriteLine("Paramètres manquants, redirection vers la nouvelle partie...");
            Navigation.NavigateTo("/nouvelle-partie", true);
            return;
        }

        // Initialisation des objets (remplacez par vos classes concrètes)
        var joueur = JoueurNom == "Guerrier" ? new Guerrier { Nom = JoueurNom } : null;
        var monstre = MonstreNom == "Gobelin" ? new Gobelin { Nom = MonstreNom } : null;

        if (joueur == null || monstre == null)
        {
            Console.WriteLine("Erreur lors de la création du joueur ou du monstre.");
            Navigation.NavigateTo("/nouvelle-partie", true);
            return;
        }

        // Initialiser le CombatManager
        CombatManager = new CombatManager(joueur, monstre);
        CombatLogs.Add($"Un combat commence entre {joueur.Nom} et {monstre.Nom} !");
    }

    private void Attaquer()
    {
        var message = CombatManager.ExecuterTour(joueurAttaqueEnPremier: true);
        CombatLogs.Add(message);
    }

    private void Fuir()
    {
        CombatLogs.Add($"{CombatManager.Joueur.Nom} a pris la fuite !");
        Navigation.NavigateTo("/nouvelle-partie");
    }

    private void RetournerAuMenu()
    {
        Navigation.NavigateTo("/nouvelle-partie");
    }
}
